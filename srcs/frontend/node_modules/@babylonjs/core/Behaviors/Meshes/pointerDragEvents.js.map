{"version":3,"file":"pointerDragEvents.js","sourceRoot":"","sources":["../../../../../dev/core/src/Behaviors/Meshes/pointerDragEvents.ts"],"names":[],"mappings":"","sourcesContent":["import type { PointerInfo } from \"core/Events/pointerEvents\";\r\nimport type { Vector3 } from \"core/Maths/math.vector\";\r\nimport type { Nullable } from \"core/types\";\r\n\r\n/**\r\n * Event type for drag move events\r\n */\r\nexport type DragEvent = {\r\n    /**\r\n     * Delta between last drag position and current drag position in world space\r\n     */\r\n    delta: Vector3;\r\n    /**\r\n     * Point in world space where the drag intersects the drag plane\r\n     *\r\n     * (if validatedDrag is used, the position of the attached mesh might not equal dragPlanePoint)\r\n     */\r\n    dragPlanePoint: Vector3;\r\n    /**\r\n     * Normal of the current drag plane used during the drag\r\n     */\r\n    dragPlaneNormal: Vector3;\r\n    /**\r\n     * Distance along the drag axis\r\n     */\r\n    dragDistance: number;\r\n    /**\r\n     * Pointer id to use\r\n     */\r\n    pointerId: number;\r\n    /**\r\n     * Pointer info for the event (if any)\r\n     */\r\n    pointerInfo: Nullable<PointerInfo>;\r\n};\r\n\r\n/**\r\n * Event type for drag start and end events\r\n */\r\nexport type DragStartEndEvent = Pick<DragEvent, \"dragPlanePoint\" | \"pointerId\" | \"pointerInfo\">;\r\n"]}