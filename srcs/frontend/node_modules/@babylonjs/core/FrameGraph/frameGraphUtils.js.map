{"version":3,"file":"frameGraphUtils.js","sourceRoot":"","sources":["../../../../dev/core/src/FrameGraph/frameGraphUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\n// eslint-disable-next-line import/no-internal-modules\r\nimport type { Camera, FrameGraph, Nullable } from \"core/index\";\r\nimport { FrameGraphObjectRendererTask } from \"core/FrameGraph/Tasks/Rendering/objectRendererTask\";\r\nimport { FrameGraphGeometryRendererTask } from \"core/FrameGraph/Tasks/Rendering/geometryRendererTask\";\r\nimport { FrameGraphUtilityLayerRendererTask } from \"core/FrameGraph/Tasks/Rendering/utilityLayerRendererTask\";\r\nimport { UtilityLayerRenderer } from \"core/Rendering/utilityLayerRenderer\";\r\n\r\n/**\r\n * Looks for the main camera used by the frame graph.\r\n * By default, this is the camera used by the main object renderer task.\r\n * If no such task, we try to find a camera in either a geometry renderer or a utility layer renderer tasks.\r\n * @param frameGraph The frame graph to search in\r\n * @returns The main camera used by the frame graph, or null if not found\r\n */\r\nexport function FindMainCamera(frameGraph: FrameGraph): Nullable<Camera> {\r\n    const mainObjectRenderer = FrameGraphUtils.FindMainObjectRenderer(frameGraph);\r\n    if (mainObjectRenderer) {\r\n        return mainObjectRenderer.camera;\r\n    }\r\n\r\n    // Try to find a camera in either the geometry renderer or the utility layer renderer tasks\r\n    const tasks = frameGraph.tasks;\r\n\r\n    for (let i = tasks.length - 1; i >= 0; i--) {\r\n        const task = tasks[i];\r\n        if (task instanceof FrameGraphGeometryRendererTask || task instanceof FrameGraphUtilityLayerRendererTask) {\r\n            return task.camera;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Looks for the main object renderer task in the frame graph.\r\n * By default, this is the object renderer task with isMainObjectRenderer set to true.\r\n * If no such task, we return the last object renderer task that has an object list with meshes (or null if none found).\r\n * @param frameGraph The frame graph to search in\r\n * @returns The main object renderer of the frame graph, or null if not found\r\n */\r\nexport function FindMainObjectRenderer(frameGraph: FrameGraph): Nullable<FrameGraphObjectRendererTask> {\r\n    const objectRenderers = frameGraph.getTasksByType<FrameGraphObjectRendererTask>(FrameGraphObjectRendererTask);\r\n\r\n    let fallbackRenderer: Nullable<FrameGraphObjectRendererTask> = null;\r\n    for (let i = objectRenderers.length - 1; i >= 0; --i) {\r\n        if (objectRenderers[i].isMainObjectRenderer) {\r\n            return objectRenderers[i];\r\n        }\r\n        if (objectRenderers[i].objectList.meshes && !fallbackRenderer) {\r\n            fallbackRenderer = objectRenderers[i];\r\n        }\r\n    }\r\n    return fallbackRenderer;\r\n}\r\n\r\n/**\r\n * Creates a utility layer renderer compatible with the given frame graph.\r\n * @param frameFraph The frame graph to create the utility layer renderer for\r\n * @param handleEvents True if the utility layer renderer should handle events, false otherwise (default is true)\r\n * @returns The created utility layer renderer\r\n */\r\nexport function CreateUtilityLayerRenderer(frameFraph: FrameGraph, handleEvents = true): UtilityLayerRenderer {\r\n    const scene = frameFraph.scene;\r\n    const layer = new UtilityLayerRenderer(scene, handleEvents, true);\r\n\r\n    layer.utilityLayerScene.activeCamera = scene.activeCamera;\r\n\r\n    let camera = FrameGraphUtils.FindMainCamera(scene.frameGraph!);\r\n\r\n    if (!camera && scene.cameras.length > 0) {\r\n        camera = scene.cameras[0];\r\n    }\r\n\r\n    if (camera) {\r\n        layer.setRenderCamera(camera);\r\n        layer.utilityLayerScene.activeCamera = camera;\r\n    }\r\n\r\n    const gizmoLayerRenderObserver = scene.onAfterRenderObservable.add(() => {\r\n        layer.render();\r\n    });\r\n\r\n    layer.utilityLayerScene.onDisposeObservable.addOnce(() => {\r\n        scene.onAfterRenderObservable.remove(gizmoLayerRenderObserver);\r\n    });\r\n\r\n    return layer;\r\n}\r\n\r\n/**\r\n * Class used to host frame graph specific utilities\r\n */\r\nexport const FrameGraphUtils = {\r\n    /**\r\n     * Looks for the main camera used by the frame graph.\r\n     * We assume that the camera used by the the last rendering task in the graph is the main camera.\r\n     * @param frameGraph The frame graph to search in\r\n     * @returns The main camera used by the frame graph, or null if not found\r\n     */\r\n    FindMainCamera,\r\n\r\n    /**\r\n     * Looks for the main object renderer task in the frame graph.\r\n     * We assume that the last object renderer task that has an object list with meshes is the main object renderer.\r\n     * @param frameGraph The frame graph to search in\r\n     * @returns The main object renderer of the frame graph, or null if not found\r\n     */\r\n    FindMainObjectRenderer,\r\n\r\n    /**\r\n     * Creates a utility layer renderer compatible with the given frame graph.\r\n     * @param frameFraph The frame graph to create the utility layer renderer for\r\n     * @param handleEvents True if the utility layer renderer should handle events, false otherwise\r\n     * @returns The created utility layer renderer\r\n     */\r\n    CreateUtilityLayerRenderer,\r\n};\r\n"]}