{"version":3,"file":"imageProcessingPostProcessBlock.js","sourceRoot":"","sources":["../../../../../../../dev/core/src/FrameGraph/Node/Blocks/PostProcesses/imageProcessingPostProcessBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Scene, FrameGraph } from \"core/index\";\r\nimport { RegisterClass } from \"../../../../Misc/typeStore\";\r\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../../../Decorators/nodeDecorator\";\r\nimport { FrameGraphImageProcessingTask } from \"core/FrameGraph/Tasks/PostProcesses/imageProcessingTask\";\r\nimport { ThinImageProcessingPostProcess } from \"core/PostProcesses/thinImageProcessingPostProcess\";\r\nimport { NodeRenderGraphBasePostProcessBlock } from \"./basePostProcessBlock\";\r\nimport { ImageProcessingConfiguration } from \"core/Materials/imageProcessingConfiguration\";\r\nimport { Color4 } from \"../../../../Maths/math.color\";\r\n\r\n/**\r\n * Block that implements the image processing post process\r\n */\r\nexport class NodeRenderGraphImageProcessingPostProcessBlock extends NodeRenderGraphBasePostProcessBlock {\r\n    protected override _frameGraphTask: FrameGraphImageProcessingTask;\r\n\r\n    /**\r\n     * Gets the frame graph task associated with this block\r\n     */\r\n    public override get task() {\r\n        return this._frameGraphTask;\r\n    }\r\n\r\n    /**\r\n     * Create a new image processing post process block\r\n     * @param name defines the block name\r\n     * @param frameGraph defines the hosting frame graph\r\n     * @param scene defines the hosting scene\r\n     */\r\n    public constructor(name: string, frameGraph: FrameGraph, scene: Scene) {\r\n        super(name, frameGraph, scene);\r\n\r\n        this._finalizeInputOutputRegistering();\r\n\r\n        this._frameGraphTask = new FrameGraphImageProcessingTask(\r\n            this.name,\r\n            frameGraph,\r\n            new ThinImageProcessingPostProcess(name, scene.getEngine(), {\r\n                scene,\r\n                imageProcessingConfiguration: new ImageProcessingConfiguration(),\r\n            })\r\n        );\r\n    }\r\n\r\n    /** Contrast used in the effect */\r\n    @editableInPropertyPage(\"Contrast\", PropertyTypeForEdition.Float, \"PROPERTIES\", { min: 0, max: 4 })\r\n    public get contrast(): number {\r\n        return this._frameGraphTask.postProcess.contrast;\r\n    }\r\n\r\n    public set contrast(value: number) {\r\n        this._frameGraphTask.postProcess.contrast = value;\r\n    }\r\n\r\n    /** Exposure used in the effect */\r\n    @editableInPropertyPage(\"Exposure\", PropertyTypeForEdition.Float, \"PROPERTIES\", { min: 0, max: 4 })\r\n    public get exposure(): number {\r\n        return this._frameGraphTask.postProcess.exposure;\r\n    }\r\n\r\n    public set exposure(value: number) {\r\n        this._frameGraphTask.postProcess.exposure = value;\r\n    }\r\n\r\n    /** Whether the tone mapping effect is enabled. */\r\n    @editableInPropertyPage(\"Enabled\", PropertyTypeForEdition.Boolean, \"TONE MAPPING\")\r\n    public get toneMappingEnabled(): boolean {\r\n        return this._frameGraphTask.postProcess.toneMappingEnabled;\r\n    }\r\n\r\n    public set toneMappingEnabled(value: boolean) {\r\n        this._frameGraphTask.postProcess.toneMappingEnabled = value;\r\n    }\r\n\r\n    /** Type of tone mapping effect. */\r\n    @editableInPropertyPage(\"Type\", PropertyTypeForEdition.List, \"TONE MAPPING\", {\r\n        options: [\r\n            { value: ImageProcessingConfiguration.TONEMAPPING_STANDARD, label: \"Standard\" },\r\n            { value: ImageProcessingConfiguration.TONEMAPPING_ACES, label: \"ACES\" },\r\n            { value: ImageProcessingConfiguration.TONEMAPPING_KHR_PBR_NEUTRAL, label: \"KHR PBR Neutral\" },\r\n        ],\r\n    })\r\n    public get toneMappingType(): number {\r\n        return this._frameGraphTask.postProcess.toneMappingType;\r\n    }\r\n\r\n    public set toneMappingType(value: number) {\r\n        this._frameGraphTask.postProcess.toneMappingType = value;\r\n    }\r\n\r\n    /** Whether the vignette effect is enabled. */\r\n    @editableInPropertyPage(\"Enabled\", PropertyTypeForEdition.Boolean, \"VIGNETTE\")\r\n    public get vignetteEnabled(): boolean {\r\n        return this._frameGraphTask.postProcess.vignetteEnabled;\r\n    }\r\n\r\n    public set vignetteEnabled(value: boolean) {\r\n        this._frameGraphTask.postProcess.vignetteEnabled = value;\r\n    }\r\n\r\n    /** Vignette weight or intensity of the vignette effect. */\r\n    @editableInPropertyPage(\"Weight\", PropertyTypeForEdition.Float, \"VIGNETTE\", { min: 0, max: 4 })\r\n    public get vignetteWeight(): number {\r\n        return this._frameGraphTask.postProcess.vignetteWeight;\r\n    }\r\n\r\n    public set vignetteWeight(value: number) {\r\n        this._frameGraphTask.postProcess.vignetteWeight = value;\r\n    }\r\n\r\n    /** Vignette stretch size. */\r\n    @editableInPropertyPage(\"Stretch\", PropertyTypeForEdition.Float, \"VIGNETTE\", { min: 0, max: 1 })\r\n    public get vignetteStretch(): number {\r\n        return this._frameGraphTask.postProcess.vignetteStretch;\r\n    }\r\n\r\n    public set vignetteStretch(value: number) {\r\n        this._frameGraphTask.postProcess.vignetteStretch = value;\r\n    }\r\n\r\n    /** Camera field of view used by the Vignette effect. */\r\n    @editableInPropertyPage(\"FOV\", PropertyTypeForEdition.Float, \"VIGNETTE\", { min: 0, max: 3.14159 })\r\n    public get vignetteCameraFov(): number {\r\n        return this._frameGraphTask.postProcess.vignetteCameraFov;\r\n    }\r\n\r\n    public set vignetteCameraFov(value: number) {\r\n        this._frameGraphTask.postProcess.vignetteCameraFov = value;\r\n    }\r\n\r\n    /** Vignette center X Offset. */\r\n    @editableInPropertyPage(\"Center X\", PropertyTypeForEdition.Float, \"VIGNETTE\", { min: 0, max: 1 })\r\n    public get vignetteCenterX(): number {\r\n        return this._frameGraphTask.postProcess.vignetteCenterX;\r\n    }\r\n\r\n    public set vignetteCenterX(value: number) {\r\n        this._frameGraphTask.postProcess.vignetteCenterX = value;\r\n    }\r\n\r\n    /** Vignette center Y Offset. */\r\n    @editableInPropertyPage(\"Center Y\", PropertyTypeForEdition.Float, \"VIGNETTE\", { min: 0, max: 1 })\r\n    public get vignetteCenterY(): number {\r\n        return this._frameGraphTask.postProcess.vignetteCenterY;\r\n    }\r\n\r\n    public set vignetteCenterY(value: number) {\r\n        this._frameGraphTask.postProcess.vignetteCenterY = value;\r\n    }\r\n\r\n    /** Color of the vignette applied on the screen through the chosen blend mode (vignetteBlendMode) */\r\n    @editableInPropertyPage(\"Color\", PropertyTypeForEdition.Color4, \"VIGNETTE\")\r\n    public get vignetteColor(): Color4 {\r\n        return this._frameGraphTask.postProcess.vignetteColor;\r\n    }\r\n\r\n    public set vignetteColor(value: Color4) {\r\n        this._frameGraphTask.postProcess.vignetteColor = value;\r\n    }\r\n\r\n    /** Vignette blend mode allowing different kind of effect. */\r\n    @editableInPropertyPage(\"Blend mode\", PropertyTypeForEdition.List, \"VIGNETTE\", {\r\n        options: [\r\n            { value: ImageProcessingConfiguration.VIGNETTEMODE_MULTIPLY, label: \"Multiply\" },\r\n            { value: ImageProcessingConfiguration.VIGNETTEMODE_OPAQUE, label: \"Opaque\" },\r\n        ],\r\n    })\r\n    public get vignetteBlendMode(): number {\r\n        return this._frameGraphTask.postProcess.vignetteBlendMode;\r\n    }\r\n\r\n    public set vignetteBlendMode(value: number) {\r\n        this._frameGraphTask.postProcess.vignetteBlendMode = value;\r\n    }\r\n\r\n    /** Whether the dithering effect is enabled. */\r\n    @editableInPropertyPage(\"Enabed\", PropertyTypeForEdition.Boolean, \"DITHERING\")\r\n    public get ditheringEnabled(): boolean {\r\n        return this._frameGraphTask.postProcess.ditheringEnabled;\r\n    }\r\n\r\n    public set ditheringEnabled(value: boolean) {\r\n        this._frameGraphTask.postProcess.ditheringEnabled = value;\r\n    }\r\n\r\n    /** Sets whether the dithering effect is enabled. */\r\n    @editableInPropertyPage(\"Intensity\", PropertyTypeForEdition.Float, \"DITHERING\", { min: 0, max: 1 })\r\n    public get ditheringIntensity(): number {\r\n        return this._frameGraphTask.postProcess.ditheringIntensity;\r\n    }\r\n\r\n    public set ditheringIntensity(value: number) {\r\n        this._frameGraphTask.postProcess.ditheringIntensity = value;\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public override getClassName() {\r\n        return \"NodeRenderGraphImageProcessingPostProcessBlock\";\r\n    }\r\n\r\n    protected override _dumpPropertiesCode() {\r\n        const codes: string[] = [];\r\n        codes.push(`${this._codeVariableName}.contrast = ${this.contrast};`);\r\n        codes.push(`${this._codeVariableName}.exposure = ${this.exposure};`);\r\n        codes.push(`${this._codeVariableName}.toneMappingEnabled = ${this.toneMappingEnabled};`);\r\n        codes.push(`${this._codeVariableName}.toneMappingType = ${this.toneMappingType};`);\r\n        codes.push(`${this._codeVariableName}.vignetteEnabled = ${this.vignetteEnabled};`);\r\n        codes.push(`${this._codeVariableName}.vignetteWeight = ${this.vignetteWeight};`);\r\n        codes.push(`${this._codeVariableName}.vignetteStretch = ${this.vignetteStretch};`);\r\n        codes.push(`${this._codeVariableName}.vignetteCameraFov = ${this.vignetteCameraFov};`);\r\n        codes.push(`${this._codeVariableName}.vignetteCenterX = ${this.vignetteCenterX};`);\r\n        codes.push(`${this._codeVariableName}.vignetteCenterY = ${this.vignetteCenterY};`);\r\n        codes.push(`${this._codeVariableName}.vignetteColor = new BABYLON.Color4(${this.vignetteColor.r}, ${this.vignetteColor.g}, ${this.vignetteColor.b}, 1);`);\r\n        codes.push(`${this._codeVariableName}.vignetteBlendMode = ${this.vignetteBlendMode};`);\r\n        codes.push(`${this._codeVariableName}.ditheringEnabled = ${this.ditheringEnabled};`);\r\n        codes.push(`${this._codeVariableName}.ditheringIntensity = ${this.ditheringIntensity};`);\r\n        return super._dumpPropertiesCode() + codes.join(\"\\n\");\r\n    }\r\n\r\n    public override serialize(): any {\r\n        const serializationObject = super.serialize();\r\n        serializationObject.contrast = this.contrast;\r\n        serializationObject.exposure = this.exposure;\r\n        serializationObject.toneMappingEnabled = this.toneMappingEnabled;\r\n        serializationObject.toneMappingType = this.toneMappingType;\r\n        serializationObject.vignetteEnabled = this.vignetteEnabled;\r\n        serializationObject.vignetteWeight = this.vignetteWeight;\r\n        serializationObject.vignetteStretch = this.vignetteStretch;\r\n        serializationObject.vignetteCameraFov = this.vignetteCameraFov;\r\n        serializationObject.vignetteCenterX = this.vignetteCenterX;\r\n        serializationObject.vignetteCenterY = this.vignetteCenterY;\r\n        serializationObject.vignetteColor = this.vignetteColor.asArray();\r\n        serializationObject.vignetteBlendMode = this.vignetteBlendMode;\r\n        serializationObject.ditheringEnabled = this.ditheringEnabled;\r\n        serializationObject.ditheringIntensity = this.ditheringIntensity;\r\n        return serializationObject;\r\n    }\r\n\r\n    public override _deserialize(serializationObject: any) {\r\n        super._deserialize(serializationObject);\r\n        this.contrast = serializationObject.contrast;\r\n        this.exposure = serializationObject.exposure;\r\n        this.toneMappingEnabled = serializationObject.toneMappingEnabled;\r\n        this.toneMappingType = serializationObject.toneMappingType;\r\n        this.vignetteEnabled = serializationObject.vignetteEnabled;\r\n        this.vignetteWeight = serializationObject.vignetteWeight;\r\n        this.vignetteStretch = serializationObject.vignetteStretch;\r\n        this.vignetteCameraFov = serializationObject.vignetteCameraFov;\r\n        this.vignetteCenterX = serializationObject.vignetteCenterX;\r\n        this.vignetteCenterY = serializationObject.vignetteCenterY;\r\n        this.vignetteColor = Color4.FromArray(serializationObject.vignetteColor);\r\n        this.vignetteBlendMode = serializationObject.vignetteBlendMode;\r\n        this.ditheringEnabled = serializationObject.ditheringEnabled;\r\n        this.ditheringIntensity = serializationObject.ditheringIntensity;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.NodeRenderGraphImageProcessingPostProcessBlock\", NodeRenderGraphImageProcessingPostProcessBlock);\r\n"]}