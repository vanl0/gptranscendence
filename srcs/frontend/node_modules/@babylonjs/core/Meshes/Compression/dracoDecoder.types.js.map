{"version":3,"file":"dracoDecoder.types.js","sourceRoot":"","sources":["../../../../../dev/core/src/Meshes/Compression/dracoDecoder.types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Decoded Draco mesh data.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface MeshData {\n    /**\n     * The indices of the mesh. Point clouds will not have indices.\n     */\n    indices?: Uint16Array | Uint32Array;\n    /**\n     * The attributes of the mesh.\n     */\n    attributes: Array<IAttributeData>;\n    /**\n     * The total number of vertices in the mesh.\n     */\n    totalVertices: number;\n}\n\n/**\n * @internal\n */\nexport interface IAttributeData {\n    kind: string;\n    data: ArrayBufferView;\n    size: number;\n    byteOffset: number;\n    byteStride: number;\n    normalized: boolean;\n}\n\n/**\n * @internal\n */\nexport interface IDecodeMeshDoneMessage {\n    id: \"decodeMeshDone\";\n    totalVertices: number;\n}\n\n/**\n * @internal\n */\nexport interface IIndicesMessage {\n    id: \"indices\";\n    data: Uint16Array | Uint32Array;\n}\n\n/**\n * @internal\n */\nexport interface IAttributeMessage extends IAttributeData {\n    id: \"attribute\";\n}\n\n/**\n * @internal\n */\nexport type DecoderMessage = IDecodeMeshDoneMessage | IIndicesMessage | IAttributeMessage;\n"]}