{"version":3,"file":"depthSourceBlock.js","sourceRoot":"","sources":["../../../../../../../dev/core/src/Materials/Node/Blocks/Dual/depthSourceBlock.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAG3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,oBAAoB,CAAC;AAItD;;GAEG;AACH,MAAM,OAAO,gBAAiB,SAAQ,gBAAgB;IAClD;;;OAGG;IACH,YAAmB,IAAY;QAC3B,KAAK,CAAC,IAAI,CAAC,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,IAAoB,OAAO;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED,IAAoB,OAAO,CAAC,OAA0B;QAClD,6DAA6D;IACjE,CAAC;IAEe,IAAI,CAAC,MAAc,EAAE,YAA0B;QAC3D,MAAM,KAAK,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;QACtC,MAAM,QAAQ,GAAG,KAAK,CAAC,mBAAmB,EAAE,CAAC;QAE7C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;QAEvC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IACrC,CAAC;IAEe,OAAO;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;;OAGG;IACa,YAAY;QACxB,OAAO,kBAAkB,CAAC;IAC9B,CAAC;IAEkB,mBAAmB;QAClC,OAAO,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAEe,SAAS;QACrB,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;CACJ;AAED,aAAa,CAAC,0BAA0B,EAAE,gBAAgB,CAAC,CAAC","sourcesContent":["import { RegisterClass } from \"../../../../Misc/typeStore\";\r\nimport type { Effect } from \"../../../effect\";\r\n\r\nimport { ImageSourceBlock } from \"./imageSourceBlock\";\r\nimport type { Nullable } from \"../../../../types\";\r\nimport type { Texture } from \"../../../Textures/texture\";\r\nimport type { NodeMaterial } from \"../../nodeMaterial\";\r\n/**\r\n * Block used to provide an depth texture for a TextureBlock\r\n */\r\nexport class DepthSourceBlock extends ImageSourceBlock {\r\n    /**\r\n     * Creates a new DepthSourceBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name);\r\n    }\r\n\r\n    /**\r\n     * Gets or sets the texture associated with the node\r\n     */\r\n    public override get texture(): Nullable<Texture> {\r\n        return this._texture;\r\n    }\r\n\r\n    public override set texture(texture: Nullable<Texture>) {\r\n        // Do nothing, we always use the depth texture from the scene\r\n    }\r\n\r\n    public override bind(effect: Effect, nodeMaterial: NodeMaterial) {\r\n        const scene = nodeMaterial.getScene();\r\n        const renderer = scene.enableDepthRenderer();\r\n\r\n        this._texture = renderer.getDepthMap();\r\n\r\n        super.bind(effect, nodeMaterial);\r\n    }\r\n\r\n    public override isReady() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public override getClassName() {\r\n        return \"DepthSourceBlock\";\r\n    }\r\n\r\n    protected override _dumpPropertiesCode() {\r\n        return super._dumpPropertiesCode(true);\r\n    }\r\n\r\n    public override serialize(): any {\r\n        return super.serialize(true);\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.DepthSourceBlock\", DepthSourceBlock);\r\n"]}