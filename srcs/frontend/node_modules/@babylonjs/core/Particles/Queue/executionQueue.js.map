{"version":3,"file":"executionQueue.js","sourceRoot":"","sources":["../../../../../dev/core/src/Particles/Queue/executionQueue.ts"],"names":[],"mappings":"AAcA,gBAAgB;AAChB,MAAM,UAAU,cAAc,CAAC,MAA4B,EAAE,SAA+B;IACxF,MAAM,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;IAC7C,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC5B,IAAI,SAAS,CAAC,YAAY,EAAE,CAAC;QACzB,SAAS,CAAC,YAAY,CAAC,QAAQ,GAAG,MAAM,CAAC;IAC7C,CAAC;IACD,SAAS,CAAC,YAAY,GAAG,MAAM,CAAC;AACpC,CAAC;AAED,gBAAgB;AAChB,MAAM,UAAU,aAAa,CAAC,MAA4B,EAAE,SAA+B;IACvF,MAAM,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;IACrC,IAAI,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,SAAS,CAAC,QAAQ,CAAC,YAAY,GAAG,MAAM,CAAC;IAC7C,CAAC;IACD,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC;AAChC,CAAC;AAED,gBAAgB;AAChB,MAAM,UAAU,gBAAgB,CAAC,MAA4B,EAAE,IAA0B;IACrF,IAAI,SAAS,GAAG,IAAI,CAAC;IACrB,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;QACxB,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC;IACnC,CAAC;IACD,MAAM,CAAC,YAAY,GAAG,SAAS,CAAC;IAChC,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;IACrC,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC;AAChC,CAAC;AAED,gBAAgB;AAChB,MAAM,UAAU,gBAAgB,CAAC,IAA0B;IACvD,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/C,CAAC;IACD,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;IACnD,CAAC;AACL,CAAC","sourcesContent":["import type { Nullable } from \"core/types\";\r\nimport type { Particle } from \"../particle\";\r\nimport type { ThinParticleSystem } from \"../thinParticleSystem\";\r\n\r\n/** @internal */\r\nexport interface _IExecutionQueueItem {\r\n    /** @internal */\r\n    process: (particle: Particle, system: ThinParticleSystem) => void;\r\n    /** @internal */\r\n    previousItem: Nullable<_IExecutionQueueItem>;\r\n    /** @internal */\r\n    nextItem: Nullable<_IExecutionQueueItem>;\r\n}\r\n\r\n/** @internal */\r\nexport function _ConnectBefore(newOne: _IExecutionQueueItem, activeOne: _IExecutionQueueItem) {\r\n    newOne.previousItem = activeOne.previousItem;\r\n    newOne.nextItem = activeOne;\r\n    if (activeOne.previousItem) {\r\n        activeOne.previousItem.nextItem = newOne;\r\n    }\r\n    activeOne.previousItem = newOne;\r\n}\r\n\r\n/** @internal */\r\nexport function _ConnectAfter(newOne: _IExecutionQueueItem, activeOne: _IExecutionQueueItem) {\r\n    newOne.previousItem = activeOne;\r\n    newOne.nextItem = activeOne.nextItem;\r\n    if (activeOne.nextItem) {\r\n        activeOne.nextItem.previousItem = newOne;\r\n    }\r\n    activeOne.nextItem = newOne;\r\n}\r\n\r\n/** @internal */\r\nexport function _ConnectAtTheEnd(newOne: _IExecutionQueueItem, root: _IExecutionQueueItem) {\r\n    let activeOne = root;\r\n    while (activeOne.nextItem) {\r\n        activeOne = activeOne.nextItem;\r\n    }\r\n    newOne.previousItem = activeOne;\r\n    newOne.nextItem = activeOne.nextItem;\r\n    activeOne.nextItem = newOne;\r\n}\r\n\r\n/** @internal */\r\nexport function _RemoveFromQueue(item: _IExecutionQueueItem) {\r\n    if (item.previousItem) {\r\n        item.previousItem.nextItem = item.nextItem;\r\n    }\r\n    if (item.nextItem) {\r\n        item.nextItem.previousItem = item.previousItem;\r\n    }\r\n}\r\n"]}