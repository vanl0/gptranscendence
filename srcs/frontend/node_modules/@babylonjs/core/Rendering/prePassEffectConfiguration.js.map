{"version":3,"file":"prePassEffectConfiguration.js","sourceRoot":"","sources":["../../../../dev/core/src/Rendering/prePassEffectConfiguration.ts"],"names":[],"mappings":"","sourcesContent":["import type { Color4 } from \"core/Maths/math.color\";\r\nimport type { PostProcess } from \"../PostProcesses/postProcess\";\r\n\r\n/**\r\n * Interface for defining prepass effects in the prepass post-process pipeline\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport interface PrePassEffectConfiguration {\r\n    /**\r\n     * Name of the effect\r\n     */\r\n    name: string;\r\n    /**\r\n     * Post process to attach for this effect\r\n     */\r\n    postProcess?: PostProcess;\r\n    /**\r\n     * Textures required in the MRT\r\n     */\r\n    texturesRequired: number[];\r\n    /**\r\n     * Is the effect enabled\r\n     */\r\n    enabled: boolean;\r\n    /**\r\n     * Does the output of this prepass need to go through imageprocessing\r\n     */\r\n    needsImageProcessing?: boolean;\r\n    /**\r\n     * The clear color of the render targets. If not provided, defaults to (0, 0, 0, 0)\r\n     */\r\n    clearColor?: Color4;\r\n    /**\r\n     * Disposes the effect configuration\r\n     */\r\n    dispose?: () => void;\r\n    /**\r\n     * Creates the associated post process\r\n     */\r\n    createPostProcess?: () => PostProcess;\r\n}\r\n"]}